Melytix User Database Structure:
Note: We are using mongo db as our main database so the structure will be in mongodb document as json format

Docs syntax:
    # - comment
    ~ - all matching cases
    () - variable description
    <> - variable type (int/string/hash/etc.)

{
"_id":{
    "$oid": ObjectId
}
{  # data
    "email": <string>,
    "password": <binary> (Hashed string),
    "salt": <binary> (salt that was used to hash the password),
    "auth_token" : <string> (generated uuid token that is used in every api for secure assess),
    "tokens": <dict> (all the assess and refresh tokens used for all connected systems),
    "connected_systems": { <dict> (the list of all the systems that user connected)
        "google_analytics": {
            "account" : str (user account) ,
            "account_name" : str (name of selected account) ,
            "web_property" : str (selected web_property) ,
            "web_property_name" : str (name of selected web_property)
        },
        "search_console": {
            "site_url" : str (selected site URL)
        }
        "facebook_insights":{
            "account_id": (account ID in the ads manager, which the user has chosen)
        },
        "search_console": {}
    },
    "metrics": {
        "google_analytics" : { <dict> (the google analytics data)
            "ga_~name of the metric" : <list> (the array of metrics) # ga_~name of the metric[i] == ga_dates[i],
            "ga_dates": <list> (the array of dates from google google analytics, contains every day from user registration minus 3 weeks)
        },
        "search_console": {},
        "facebook_insights": {
             "dates": <list> (the array of dates from facebook ads manager, contains every day from user registration minus 3 weeks)
             "~name of the metric": <list> (the array of metrics) # ~name of the metric[i] == dates[i]
             }
        }
    },
    # TODO: add more systems
    "Tips"[ <list> (the generated tips for user)
        {  # every tip is an object with its fields
            "id": <uuid string>,
            "category" <string>,
            "title": <string>,
            "description": <string>,
            "active": <boolean>
        }
    "Alerts"[ <list> (the generated alerts for user)
        {  # every tip is an object with its fields
            "id": <uuid string>,
            "category" <string>,
            "title": <string>,
            "description": <string>,
            "active": <boolean>
        }
    ],
    "DashSettings": <dict> (user settings for his dashboard)
}
}
